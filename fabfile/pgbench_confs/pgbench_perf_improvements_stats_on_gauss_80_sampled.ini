[DEFAULT]
postgres_citus_versions: [('15.2', 'gokhangulbiz/tenant-stats-perf-improvements')]
shard_counts_replication_factors: [(32, 1)]

; Citus flags can be added below as well. E.g. citus.shard_replication_factor = 2
; Beware of citus flags which are available in one version but not the other
; In that case, consider creating two different configs for each version
postgresql_conf: [
                 "max_wal_size = '50GB'",
                 "checkpoint_completion_target = 0.9",
                 "checkpoint_timeout = '1h'",
                 "max_connections = 1000",
                 "max_prepared_transactions = 1000",
                 "citus.stat_tenants_track TO 'all'",
                 "citus.stat_tenants_sample_rate_for_new_tenants = 80",
                 ]

[initialization]
pgbench_command: pgbench -i -s 10

[citus1]
distribute_table_command: SELECT create_distributed_table('pgbench_accounts', 'aid');
sql_command: VACUUM ANALYZE pgbench_accounts;

[select-only-16c-16t]
pgbench_command: pgbench -c 16 -j 16 -T 120 -P 30 -r -f fabfile/pgbench_scripts/select-only-gauss-distribution.sql --max-tries=5 -s 10

[select-only-32c-16t]
pgbench_command: pgbench -c 32 -j 16 -T 120 -P 30 -r -f fabfile/pgbench_scripts/select-only-gauss-distribution.sql --max-tries=5 -s 10

[select-only-64c-16t]
pgbench_command: pgbench -c 64 -j 16 -T 120 -P 30 -r -f fabfile/pgbench_scripts/select-only-gauss-distribution.sql --max-tries=5 -s 10

[select-only-128c-16t]
pgbench_command: pgbench -c 128 -j 16 -T 120 -P 30 -r -f fabfile/pgbench_scripts/select-only-gauss-distribution.sql --max-tries=5 -s 10

[select-only-256c-16t]
pgbench_command: pgbench -c 256 -j 16 -T 120 -P 30 -r -f fabfile/pgbench_scripts/select-only-gauss-distribution.sql --max-tries=5 -s 10
